# -*- mode: ruby -*-
# vi: set ft=ruby :

K8S_VERSION = ENV['K8S_VERSION']
DOCKER_VERSION = ENV['DOCKER_VERSION']

Vagrant.configure("2") do |config|

#    config.vm.box = "bento/centos-7"
    config.vm.box = "centos/7"
    config.vm.box_version = "2004.01"

    config.vm.provision "shell", inline: <<-SHELL

        set -e
		
		yum install -y coreutils
		
        # disable selinux
        setenforce 0
        sed -i 's/SELINUX=enforcing/SELINUX=permissive/g' /etc/selinux/config

        # no swap for k8s
        swapoff -a
        sed -i '/swap/s/^/#/g' /etc/fstab

        # repositories
        cp /vagrant/files/kubernetes.repo /etc/yum.repos.d/kubernetes.repo
        cp /vagrant/files/k8s.conf        /etc/sysctl.d/k8s.conf


		# use official and specific docker version playing well with k8s
		yum install -y yum-utils device-mapper-persistent-data lvm2
		yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
		yum install -y docker-ce-#{DOCKER_VERSION} docker-ce-cli-#{DOCKER_VERSION} containerd.io                                  

        # create empty daemon config
        if [ ! -f /etc/docker/daemon.json ]; then
            mkdir -p /etc/docker
            echo "{}" >/etc/docker/daemon.json;
        fi

        # install jq
        if [ ! -f /usr/local/bin/jq ]; then
           curl -sS -o /usr/local/bin/jq --location https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
           chmod +x /usr/local/bin/jq
        fi

        # install docker-distribution
        yum install -y docker-distribution

        # install k8s
		yum install -y \
            kubeadm-#{K8S_VERSION} \
            kubectl-#{K8S_VERSION} \
            kubelet-#{K8S_VERSION} \
            psmisc \
            haproxy \
            keepalived \
            --nogpgcheck

        pushd /usr/bin
            ETCD_VERSION=3.3.15
            curl -sSL https://github.com/etcd-io/etcd/releases/download/v${ETCD_VERSION}/etcd-v${ETCD_VERSION}-linux-amd64.tar.gz | tar xfz - etcd-v${ETCD_VERSION}-linux-amd64/etcdctl --strip-components=1 2> /dev/null
            chown root:root etcdctl
        popd

        sysctl --system

        kubeadm config images pull

        systemctl stop postfix ; yum remove -y postfix

        systemctl enable docker  ; systemctl start docker
        systemctl enable kubelet ; systemctl start kubelet

        kubeadm config images pull

        sync

    SHELL

end